DROP TABLE IF EXISTS COMMENTS;
DROP TABLE IF EXISTS BOOKS;
DROP TABLE IF EXISTS AUTHORS;
DROP TABLE IF EXISTS GENRES;
DROP TABLE IF EXISTS USERS;

DROP SEQUENCE IF EXISTS S_BOOKS;
CREATE SEQUENCE S_BOOKS START WITH 1000;

DROP SEQUENCE IF EXISTS S_AUTHORS;
CREATE SEQUENCE S_AUTHORS START WITH 1000 INCREMENT BY 1;

DROP SEQUENCE IF EXISTS S_GENRES;
CREATE SEQUENCE S_GENRES START WITH 1000;

DROP SEQUENCE IF EXISTS S_COMMENTS;
CREATE SEQUENCE S_COMMENTS START WITH 1000;

DROP SEQUENCE IF EXISTS S_USERS;
CREATE SEQUENCE S_USERS START WITH 1000;


CREATE TABLE USERS(ID BIGINT DEFAULT NEXT VALUE FOR S_USERS PRIMARY KEY, NAME VARCHAR(255) NOT NULL, PASSWORD VARCHAR(255) NOT NULL, IS_LOCKED BOOLEAN);

CREATE TABLE AUTHORS(ID BIGINT DEFAULT NEXT VALUE FOR S_AUTHORS PRIMARY KEY, NAME VARCHAR(255) NOT NULL);


CREATE TABLE GENRES(ID BIGINT DEFAULT NEXT VALUE FOR S_GENRES PRIMARY KEY, NAME VARCHAR(255) NOT NULL);


CREATE TABLE BOOKS(ID BIGINT DEFAULT NEXT VALUE FOR S_BOOKS PRIMARY KEY, TITLE VARCHAR(255) NOT NULL, GENRE_ID BIGINT, AUTHOR_ID BIGINT, ISBN VARCHAR(255));
ALTER TABLE BOOKS ADD FOREIGN KEY(GENRE_ID) REFERENCES GENRES(ID) ON DELETE RESTRICT;
ALTER TABLE BOOKS ADD FOREIGN KEY(AUTHOR_ID) REFERENCES AUTHORS(ID) ON DELETE RESTRICT;


CREATE TABLE COMMENTS(ID BIGINT DEFAULT NEXT VALUE FOR S_COMMENTS PRIMARY KEY, BOOK_ID BIGINT, TEXT VARCHAR(4000) NOT NULL);
ALTER TABLE COMMENTS ADD FOREIGN KEY(BOOK_ID) REFERENCES BOOKS(ID) ON DELETE CASCADE;

COMMENT ON TABLE COMMENTS IS 'Комментарии к книгам.';